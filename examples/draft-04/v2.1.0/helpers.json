{
  "variables": [],
  "info": {
    "name": "c1",
    "_postman_id": "34783f86-4a67-d3bd-ba5b-148495fa2f72",
    "description": "",
    "schema": "http://schema.getpostman.com/collection/v2/collection.json"
  },
  "item": [
    {
      "id": "51e6ecc7-ff3c-9bc0-8aea-b417c4723f68",
      "name": "OAuth",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "var data = JSON.parse(responseBody);\nvar oldNonce = environment.oldNonce;\nvar newNonce = data.form.oauth_nonce;\ntests[\"NewNonce\"]=(oldNonce != newNonce);\npostman.setEnvironmentVariable(\"oldNonce\", newNonce);\ntests[\"HasNonce\"]=data.form.oauth_nonce;console.log('oldNonce: '+oldNonce+', newNonce='+newNonce);console.log('Signature: '+data.form.oauth_signature);"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth1",
          "oauth1": [
            {
              "key": "consumerKey",
              "value": "ds",
              "type": "string"
            },
            {
              "key": "consumerSecret",
              "value": "asdgf",
              "type": "string"
            },
            {
              "key": "token",
              "value": "",
              "type": "string"
            },
            {
              "key": "tokenSecret",
              "value": "",
              "type": "string"
            },
            {
              "key": "signatureMethod",
              "value": "HMAC-SHA1",
              "type": "string"
            },
            {
              "key": "timestamp",
              "value": "1415542860",
              "type": "string"
            },
            {
              "key": "nonce",
              "value": "yPmTxQ",
              "type": "string"
            },
            {
              "key": "version",
              "value": "1.0",
              "type": "string"
            },
            {
              "key": "realm",
              "value": "",
              "type": "string"
            },
            {
              "key": "encodeOAuthSign",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "url": "httpbin.org/post",
        "method": "POST",
        "header": [],
        "data": {
          "mode": "formdata",
          "formdata": []
        },
        "description": ""
      },
      "response": []
    },
    {
      "id": "51e6ecc7-ff3c-9bc0-8aea-b417c4723f69",
      "name": "OAuth",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "var data = JSON.parse(responseBody);\nvar oldNonce = environment.oldNonce;\nvar newNonce = data.form.oauth_nonce;\ntests[\"NewNonce\"]=(oldNonce != newNonce);\npostman.setEnvironmentVariable(\"oldNonce\", newNonce);\ntests[\"HasNonce\"]=data.form.oauth_nonce;console.log('oldNonce: '+oldNonce+', newNonce='+newNonce);console.log('Signature: '+data.form.oauth_signature);"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "oauth2",
          "oauth2": [
            {
              "key": "accessToken",
              "value": "secretToken",
              "type": "string"
            },
            {
              "key": "addTokenTo",
              "value": "header",
              "type": "string"
            },
            {
              "key": "callBackUrl",
              "value": "https://foo.com/cb",
              "type": "string"
            },
            {
              "key": "authUrl",
              "value": "https://foo.com/au",
              "type": "string"
            },
            {
              "key": "accessTokenUrl",
              "value": "https://foo.com/at",
              "type": "string"
            },
            {
              "key": "clientId",
              "value": "uniqueClientIdentifier",
              "type": "string"
            },
            {
              "key": "clientSecret",
              "value": "secretClientValue",
              "type": "string"
            },
            {
              "key": "clientAuth",
              "value": "body",
              "type": "string"
            },
            {
              "key": "grantType",
              "value": "implicit",
              "type": "string"
            },
            {
              "key": "scope",
              "value": "all",
              "type": "string"
            },
            {
              "key": "username",
              "value": "postman",
              "type": "string"
            },
            {
              "key": "password",
              "value": "randomSecretString",
              "type": "string"
            },
            {
              "key": "tokenType",
              "value": "bearer",
              "type": "string"
            },
            {
              "key": "redirectUri",
              "value": "https://foo.com/rd",
              "type": "string"
            },
            {
              "key": "refreshToken",
              "value": "randomSecretToken",
              "type": "string"
            }
          ]
        },
        "url": "httpbin.org/post",
        "method": "POST",
        "header": [],
        "data": {
          "mode": "formdata",
          "formdata": []
        },
        "description": ""
      },
      "response": []
    },
    {
      "id": "35c535b1-7e0f-fba7-ce6c-71162ce45dec",
      "name": "basicAuth",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "var data = JSON.parse(responseBody);\ntests[\"Correct Basic Signature generated\"] = data.headers.Authorization.has(\"Basic YWJoaWppdDprYW5l\");"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "basic",
          "basic": [
            {
              "key": "username",
              "value": "abhijit",
              "type": "string"
            },
            {
              "key": "password",
              "value": "kane",
              "type": "string"
            }
          ]
        },
        "url": "httpbin.org/get",
        "method": "GET",
        "header": [],
        "data": {
          "mode": "formdata",
          "formdata": []
        },
        "description": ""
      },
      "response": []
    },
    {
      "id": "16f05b20-6d85-7bcd-e236-d2fa85cc811f",
      "name": "DigestAuth",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "var data = JSON.parse(responseBody);\ntests[\"DigestAuth\"] = data.headers.Authorization.has(\"Digest\");tests[\"Correct response signature generated\"]=data.headers.Authorization.has(\"8ef925a22b7fa71b5f63d2f210d0f669\");"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "digest",
          "digest": [
            {
              "key": "algorithm",
              "value": "MD5",
              "type": "string"
            },
            {
              "key": "username",
              "value": "abhijit",
              "type": "string"
            },
            {
              "key": "realm",
              "value": "me@kennethreitz.com",
              "type": "string"
            },
            {
              "key": "password",
              "value": "kane",
              "type": "string"
            },
            {
              "key": "nonce",
              "value": "b595d63333715eaf0737e4255c288dc1",
              "type": "string"
            },
            {
              "key": "nonceCount",
              "value": "000001",
              "type": "string"
            },
            {
              "key": "clientNonce",
              "value": "abcfd",
              "type": "string"
            },
            {
              "key": "opaque",
              "value": "03a268317fb5ee47794496820f0bb4fd",
              "type": "string"
            },
            {
              "key": "qop",
              "value": "auth",
              "type": "string"
            },
            {
              "key": "disableRetryRequest",
              "value": false,
              "type": "boolean"
            }
          ]
        },
        "url": "httpbin.org/get",
        "method": "GET",
        "header": [],
        "data": {
          "mode": "formdata",
          "formdata": []
        },
        "description": ""
      },
      "response": []
    }
  ]
}
