{
  "variables": [],
  "info": {
    "name": "JSONBlob Core API",
    "_postman_id": "6fd141b6-1ef7-ea36-6fb8-917f5d4e938b",
    "description": "JSON Blob was created to help parallelize client/server development. Mock JSON responses can be defined using the online editor and then clients can use the JSON Blob API to retrieve and update the mock responses.\n\nBlobs that are not accessed in 75 DAYS will be removed.\n\nCredit for the JSON editor and formatter goes to JSON Editor Online.",
    "schema": "http://schema.getpostman.com/collection/v2/collection.json"
  },
  "item": [
    {
      "id": "1bc7841d-ba1a-3784-25eb-9c40adeefb40",
      "name": "Create a Blob",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "if (responseCode.code === 201 && responseHeaders[\"location\"]) {\n    postman.setEnvironmentVariable(\"last_created_blob\", responseHeaders[\"location\"].replace(\"https://jsonblob.com/api/jsonBlob/\", \"\"));\n    \n    tests[\"Blob Id: \" + postman.getEnvironmentVariable(\"last_created_blob\")] = true;\n    tests[\"Blob Location: \" + responseHeaders[\"location\"]] = !!responseHeaders[\"location\"];\n\n}\nelse {\n    tests[\"Blob not created!\"] = false;\n}"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth",
          "noauth": {}
        },
        "url": "https://jsonblob.com/api/jsonBlob",
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          },
          {
            "key": "Accept",
            "value": "application/json",
            "description": ""
          }
        ],
        "data": {
          "mode": "raw",
          "raw": "{\"people\":[\"bill\", \"steve\", \"bob\"]}"
        },
        "description": "Creating a JSON Blob is accomplished by sending a `POST` request to `/api/jsonBlob`. The body of the request should contain valid JSON that will used as the JSON Blob. Upon successfully storing the JSON blob, a `201` response will be returned. The `Location` header in the response will be set to the URL at which the blob can be accessed with a `GET` request. The body of the response is the JSON that was stored in the JSON blob.\n\n> Replace the JSON in the raw post body with your own JSON and refer to the \"test\" tab after sending the request to easily retrieve the location of your newly created JSON"
      },
      "response": [
        {
          "name": "sample-response",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "name": "access-control-allow-methods",
              "key": "access-control-allow-methods",
              "value": "GET,POST,PUT,DELETE,HEAD,OPTIONS",
              "description": ""
            },
            {
              "name": "access-control-allow-origin",
              "key": "access-control-allow-origin",
              "value": "*",
              "description": ""
            },
            {
              "name": "access-control-expose-headers",
              "key": "access-control-expose-headers",
              "value": "X-Requested-With,X-jsonblob,X-Hello-Human,Location,Date,Content-Type,Accept,Origin",
              "description": ""
            },
            {
              "name": "cf-ray",
              "key": "cf-ray",
              "value": "1bb57d6472501998-HKG",
              "description": ""
            },
            {
              "name": "content-type",
              "key": "content-type",
              "value": "application/json",
              "description": ""
            },
            {
              "name": "date",
              "key": "date",
              "value": "Thu, 19 Feb 2015 21:17:12 GMT",
              "description": ""
            },
            {
              "name": "location",
              "key": "location",
              "value": "https://jsonblob.com/api/jsonBlob/54e652d8e4b03671eae999fe",
              "description": ""
            },
            {
              "name": "server",
              "key": "server",
              "value": "cloudflare-nginx",
              "description": ""
            },
            {
              "name": "status",
              "key": "status",
              "value": "201 Created",
              "description": ""
            },
            {
              "name": "version",
              "key": "version",
              "value": "HTTP/1.1",
              "description": ""
            },
            {
              "name": "via",
              "key": "via",
              "value": "1.1 vegur",
              "description": ""
            },
            {
              "name": "x-hello-human",
              "key": "x-hello-human",
              "value": "If you feel JSON Blob is useful, please consider supporting it! https://www.gittip.com/tburch/",
              "description": ""
            },
            {
              "name": "x-jsonblob",
              "key": "x-jsonblob",
              "value": "54e652d8e4b03671eae999fe",
              "description": ""
            }
          ],
          "cookie": [],
          "responseTime": "1310",
          "data": "{\"people\":[\"bill\",\"steve\",\"bob\"]}"
        }
      ]
    },
    {
      "id": "fffc06c4-c6a5-7ac2-0202-8aa2de29d1c1",
      "name": "Retrieve a Blob",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "if (responseCode.code !== 200) {\n    tests[\"Blob not found!\"] = false;\n}\n\nelse {\n    tests[\"Blob retrieved. See response body.\"] = true;\n}\n"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth",
          "noauth": {}
        },
        "url": "https://jsonblob.com/api/jsonBlob/",
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          },
          {
            "key": "Accept",
            "value": "application/json",
            "description": ""
          }
        ],
        "data": {
          "mode": "formdata",
          "formdata": []
        },
        "description": "Retrieving a JSON Blob is accomplished by sending a `GET` request to `/api/jsonBlob/<blobId>`, where `<blobId>` is the last part of the URL path returned from the `POST` request. Upon successfully retrieving the JSON Blob, a `200` response will be returned. If no JSON Blob exists for the given `<blobId>`, a `404` response will be returned. The body of the response is the JSON that was stored in the JSON Blob.\n\n> Use the Blob ID from a *\"Create a Blob\"* `POST` request and append it to the URL to retrieve the JSON"
      },
      "response": []
    },
    {
      "id": "7f9d0613-f146-d1bf-9c72-9eb07aaa5cb4",
      "name": "Edit a Blob",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "if (responseCode.code === 404) {\n    tests[\"Blob not found!\"] = false;\n}\n\nelse {\n    \n}\n"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth",
          "noauth": {}
        },
        "url": "https://jsonblob.com/api/jsonBlob/",
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          },
          {
            "key": "Accept",
            "value": "application/json",
            "description": ""
          }
        ],
        "data": {
          "mode": "raw",
          "raw": "{\n    \"sample\": \"json\",\n    \"update\": \"success\"\n}"
        },
        "description": "Updating a JSON Blob is accomplished by sending a `PUT` request to `/api/jsonBlob/<blobId>`. The request body should contain valid JSON that the stored JSON Blob will be replaced with. Upon successfully storing the new JSON Blob, a `200` response will be returned. If no JSON Blob exists for the given `<blobId>`, a `404` response will be returned. The body of the response is the JSON that was stored in the JSON Blob.\n\n> Use the Blob ID from a *\"Create a Blob\"* `POST` request and append it to the URL to retrieve the JSON.\n> Change the raw data with your new JSON before you send the request, otherwise you may accidentally delete original data."
      },
      "response": []
    },
    {
      "id": "59665941-3886-0622-fe29-6d4d4b02e4ee",
      "name": "Delete a Blob",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": "if (responseCode.code === 200) {\n    tests[\"Successfully Deleted\"] = true;\n}\nelse {\n    tests[\"Blob not found!\"] = false;\n}"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth",
          "noauth": {}
        },
        "url": "https://jsonblob.com/api/jsonBlob",
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "description": ""
          },
          {
            "key": "Accept",
            "value": "application/json",
            "description": ""
          }
        ],
        "data": {
          "mode": "raw",
          "raw": ""
        },
        "description": "Deleting a JSON Blob is accomplished by sending a `DELETE` request to `/api/jsonBlob/<blobId>`. Upon successfully deleting the JSON Blob, a `200` response will be returned. If no JSON Blob exists for the given `<blobId>`, a `404` response will be returned. If deleting blobs is not enabled, a 405 response will be returned.\n\n> Use the Blob ID from a *\"Create a Blob\"* `POST` request and append it to the URL to retrieve the JSON."
      },
      "response": []
    }
  ]
}
